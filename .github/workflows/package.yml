name: Publish to PyPI

on:
  release:
    types:
      - created

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Update version in pyproject.toml
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}

          if [[ ! $TAG_NAME =~ ^v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "The tag $TAG_NAME is not in the expected format 'v<MAJOR>.<MINOR>.<PATCH>'"
            exit 1
          fi

          VERSION=${TAG_NAME#v}
          echo "Extracted version: $VERSION"

          # Update pyproject.toml with the version
          sed -i "s/version = \"[^\"]*\"/version = \"$VERSION\"/" pyproject.toml

      - name: Build source distribution
        run: uv build --sdist --out-dir dist

      - name: Upload source distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 1

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheel
        run: uv build --wheel --out-dir dist

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
          retention-days: 1

  publish:
    name: Publish to PyPI
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.UV_PUBLISH_TOKEN }}
        run: uv publish dist/*
